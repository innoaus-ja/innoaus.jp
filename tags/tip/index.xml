<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tip on innoaus | 株式会社イノス</title>
    <link>https://innoaus.jp/tags/tip/</link>
    <description>Recent content in Tip on innoaus | 株式会社イノス</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 01 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://innoaus.jp/tags/tip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Linux] 一般ユーザーにパスワードなしでsudoコマンドを使えるようにする</title>
      <link>https://innoaus.jp/posts/20190301/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190301/</guid>
      <description>開発環境などで毎回sudoパスワードを入力するのは面倒なことです。 パスワードを入力しなくてもsudoコマンドを実行できる方法を紹介します。
sudoコマンド関連設定ファイルは /etc/sudoers です。
＊ユーザーがuser1の場合
すべてのコマンドに対してパスワード入力なし設定
# sudo vi /etc/sudoers //ファイルの最後に %user1 ALL=(ALL) NOPASSWD: ALL  を追記
一部のコマンド(/bin/kill, /bin/rm)に対して設定する場合は
%user1 ALL=(ALL) NOPASSWD: /bin/kill, /bin/rm  sudoersファイルをより安全に編集たい場合はvisudoコマンドを使用してください。
visudo</description>
    </item>
    
    <item>
      <title>C&#43;&#43;　Lambda関数呼び出し</title>
      <link>https://innoaus.jp/posts/20190228/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190228/</guid>
      <description>C++11で導入されたLambda（ラムダ）関数は普通の関数と違い名前のない関数（anonymous function）が特徴です。
無名関数と呼ばれることもあります。
以下はLambda関数呼び出しの簡単なサンプルです。
C++ コンパイラの実装状況はhttps://en.cppreference.com/w/cpp/compiler_supportで確認することができます。
function pointerを利用した呼び出しサンプル auto a_lamda_function = [](const std::string&amp;amp; msg) { std::cout &amp;lt;&amp;lt; &amp;quot;function pointerを利用した呼び出しサンプル : &amp;quot; &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; std::endl; } void (* funcPtr)(int) = a_lamda_function; funcPtr(&amp;quot;Hello World!!!&amp;quot;);  C++17から実装されたstd::apply関数を利用した呼び出しサンプル #include &amp;lt;iostream&amp;gt; #include &amp;lt;tuple&amp;gt; #include &amp;lt;utility&amp;gt; int add(int first, int second) { return first + second; } template&amp;lt;typename T&amp;gt; T add_generic(T first, T second) { return first + second; } auto add_lambda = [](auto first, auto second) { return first + second; }; int main() { // OK std::cout &amp;lt;&amp;lt; std::apply(add, std::make_pair(1, 2)) &amp;lt;&amp;lt; &#39;\n&#39;; // Error: can&#39;t deduce the function type // std::cout &amp;lt;&amp;lt; std::apply(add_generic, std::make_pair(2.</description>
    </item>
    
    <item>
      <title>C&#43;&#43;コンソールアプリケーションに色をつける</title>
      <link>https://innoaus.jp/posts/20190226/</link>
      <pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190226/</guid>
      <description>プロジェクトrangはヘッダファイルのみで動作するコンソールアプリケーションに色をつけるオープンソースです。
https://github.com/agauniyal/rang
Colors for your Terminal. Unix-like (Linux, unix, mac) Windows Demo 必要ライブラリ rangはC++ standard libraryのみで動作するため、追加ライブラリは必要ありません。
インストール $ git clone https://github.com/agauniyal/rang.git  適用 インストールフォルダのinclude/rang.hppファイルをコピーするか、includeフォルダをプロジェクトパスに追加します。
オプション Text Styles    Code Linux/Win/Others Old Win     rang::style::bold yes yes   rang::style::dim yes no   rang::style::italic yes no   rang::style::underline yes no   rang::style::blink no no   rang::style::rblink no no   rang::style::reversed yes yes   rang::style::conceal maybe yes   rang::style::crossed yes no    Text Color    Code Linux/Win/Others Old Win     rang::fg::black yes yes   rang::fg::red yes yes   rang::fg::green yes yes   rang::fg::yellow yes yes   rang::fg::blue yes yes   rang::fg::magenta yes yes   rang::fg::cyan yes yes   rang::fg::gray yes yes    Background Color    Code Linux/Win/Others Old Win     rang::bg::black yes yes   rang::bg::red yes yes   rang::bg::green yes yes   rang::bg::yellow yes yes   rang::bg::blue yes yes   rang::bg::magenta yes yes   rang::bg::cyan yes yes   rang::bg::gray yes yes    Bright Foreground Color    Code Linux/Win/Others Old Win     rang::fgB::black yes yes   rang::fgB::red yes yes   rang::fgB::green yes yes   rang::fgB::yellow yes yes   rang::fgB::blue yes yes   rang::fgB::magenta yes yes   rang::fgB::cyan yes yes   rang::fgB::gray yes yes    Bright Background Color    Code Linux/Win/Others Old Win     rang::bgB::black yes yes   rang::bgB::red yes yes   rang::bgB::green yes yes   rang::bgB::yellow yes yes   rang::bgB::blue yes yes   rang::bgB::magenta yes yes   rang::bgB::cyan yes yes   rang::bgB::gray yes yes    Reset Styles/Colors    Code Linux/Win/Others Old Win     rang::style::reset yes yes   rang::fg::reset yes yes   rang::bg::reset yes yes    簡単なsample code #include &amp;quot;rang.</description>
    </item>
    
  </channel>
</rss>