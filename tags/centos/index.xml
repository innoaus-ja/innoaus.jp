<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Centos on innoaus | 株式会社イノス</title>
    <link>https://innoaus.jp/tags/centos/</link>
    <description>Recent content in Centos on innoaus | 株式会社イノス</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 09 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://innoaus.jp/tags/centos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CentOS7&#43;Nginx 1.14&#43;php7.2&#43;php-fpm環境構築 2 (php7.2,php-fpmインストール)</title>
      <link>https://innoaus.jp/posts/20190309/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190309/</guid>
      <description>前回の記事「Nginx 1.14をCentOS7にインストールする」の続きです。
php7.2, php-fpmインストール レポジトリ情報を追加 yum -y install http://rpms.famillecollet.com/enterprise/remi-release-7.rpm  yum info で PHP のパッケージ情報を確認 yum info --enablerepo=remi php ~~~ Version : 7.2.16  インストール # yum -y install --enablerepo=remi,remi-php72 php php-fpm  追加 yum install &amp;ndash;enablerepo=remi,remi-php72 php-bcmath
バージョン確認 # php -v PHP 7.2.16 (cli) (built: Mar 5 2019 14:45:10) ( NTS )  자동기동 sudo systemctl enable php-fpm
Nginx設定変更（php-fpm） とりあえずphp-fpmはTCP接続で確認します。
# sudo vi exemple.com.conf - #location ~ \.php$ { - # root html; - # fastcgi_pass 127.</description>
    </item>
    
    <item>
      <title>CentOS7&#43;Nginx 1.14&#43;php7.2&#43;php-fpm環境構築 1 (Nginx 1.14インストール)</title>
      <link>https://innoaus.jp/posts/20190308/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190308/</guid>
      <description>作業ログとして残しておきます。
Nginx リポジトリ追加 $ sudo rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm  パッケージ情報からバージョン確認 $ sudo yum info --enablerepo=nginx nginx ~~~中略 Version : 1.14.2.  インストール $ sudo yum -y install --enablerepo=nginx nginx  バージョン確認 $ nginx -v nginx version: nginx/1.14.2  Nginx起動 $ sudo systemctl start nginx  ブラウザからIPアドレス(http://xxx.xxx.xxx.xxx/)にアクセスし、nginxのデフォルトページが表示されることを確認。
ドキュメントルートディレクトリ変更 Nginxデフォルトルートディレクトリ　：　/usr/share/nginx/html
/var/www/html/exemple.comへ変更する場合。
$ cd /etc/nginx/conf.d // 念のためバックアップ $ sudo cp default.conf default.conf.back $ sudo mv default.conf exemple.com.conf  exemple.com.confのlocation部分のrootパスを変更します。
$ sudo vi localhost.</description>
    </item>
    
    <item>
      <title>ダウンタイムを最小限に動作中のサービスをアップデートする方法（CentOS 7）</title>
      <link>https://innoaus.jp/posts/20190307/</link>
      <pubDate>Thu, 07 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190307/</guid>
      <description> シナリオ  サービスは動作中 サービス実行ファイル名はa_process サービス実行ファイル動作に必要なshared objectファイル名はa_lib.so サービス名はa_process.service a_lib.soファイルをアップデート  アップデートスクリプト作成 $ vi update_service.sh #!/bin/sh sudo service a_process.service stop sudo cp a_lib.so {ディレクトリ}/a_lib.so sudo systemctl daemon-reload sudo service a_process.service start  作成したupdate_service.shに実行モードを設定します。
chmod +x update_service.sh  サービスアップデートのためにはsudo権限が必要です。
動作中のサービスを停止します。
sudo service a_process.service stop  shared objectをコピーします。
sudo cp a_lib.so {ディレクトリ}/a_lib.so  サービスが更新されるとサービスコントローラーのreloadが必要です。
sudo systemctl daemon-reload  サービスをスタートします。
sudo service a_process.service start  </description>
    </item>
    
    <item>
      <title>CentOS 7でACEライブラリビルド</title>
      <link>https://innoaus.jp/posts/20190306/</link>
      <pubDate>Wed, 06 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190306/</guid>
      <description>以下は https://github.com/DOCGroup/ACE_TAO のソースからCentOS 7でAECライブラリビルドする方法です。
必要事項 gcc, g++コンパイラーが必要です。
CentOS 6,7にgcc-7および関連開発ツールインストール 参考
最新バージョンダウンロード https://github.com/DOCGroup/ACE_TAO/releases から最新バージョンをダウンロードします。
現在最新バージョンは6.5.4です。 ACE-6.5.4.tar.gz
$ wget https://github.com/DOCGroup/ACE_TAO/releases/download/ACE%2BTAO-6_5_4/ACE-6.5.4.tar.gz  解凍 $ tar xvfz ACE-5.6.4.tar.gz  コンパイル環境設定 ACEライブラリをコンパイルするためには環境変数にACE_ROOTの設定が必要です。
ACE_ROOT環境変数はACE_wrappersパスを意味します。
$ cd ACE_wrappers $ export ACE_ROOT=$PWD  リナックスバージョンのconfig.hファイルをACE_wrappers/aceに作成します。
ここでは簡単にsymbolic linkを利用し作成します。
$ cd ACE_wrappers/ace $ ln -s config-linux.h config.h  そして、コンパイラーオプションを設定するため、ACE_wrappers/include/makeinclude/platform_macros.GNUファイルを次のように作成します。
$ vi ACE_wrappers/include/makeinclude/platform_macros.GNU include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU INSTALL_PREFIX=$(HOME)/devtools CPPFLAGS=-fPIC  動的ライブラリの作成 $ cd ACE_wrappers $ make -j 8 install  このようにすれば、コンパイルされた結果は$HOME/devtoolsにインストールされます。
-j 8は並列コンパイルオプション、8はコア数を意味します。</description>
    </item>
    
    <item>
      <title>CentOS 7にICE(Internet Communications Engine)インストール</title>
      <link>https://innoaus.jp/posts/20190305/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190305/</guid>
      <description>ICEはZeroC, Inc. (https://www.zeroc.com) 社が開発した分散オブジェクトモデルのためのフレームワークで、様々な言語をサポートします。
以下はCentOS 7にIce Frameworkをインストール方法を整理しました。
yumリポジトリ構成 $ wget https://zeroc.com/download/Ice/3.7/el7/zeroc-ice3.7.repo $ sudo cp zeroc-ice3.7.repo /etc/yum.repos.d/  Iceインストール(C++, Python, PHPそしてIce基盤サービスインストール) $ sudo yum -y install ice-all-runtime ice-all-devel  確認 slice2cppはSliceファイルをコンパイルし、C++コードを生成するコマンドです。
$ slice2cpp slice2cpp: error: no input file Usage: slice2cpp [options] slice-files... Options: -h, --help Show this message. -v, --version Display the Ice version. -DNAME Define NAME as 1. -DNAME=DEF Define NAME as DEF. -UNAME Remove any definition for NAME. -IDIR Put DIR in the include file search path.</description>
    </item>
    
    <item>
      <title>CentOS 7にPostgresql Service設定</title>
      <link>https://innoaus.jp/posts/20190304_2/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190304_2/</guid>
      <description>ソースコードからビルドしたか、コピーしたデータベースをサービスとして登録するための方法を整理しました。
サービススクリプト作成 $ vi postgresql.service # Systemd service definition for postgresql-bdr94 # # It&#39;s not recommended to modify this file in-place, because it will be # overwritten during package upgrades. If you want to customize, the # best way is to create a file &amp;quot;/etc/systemd/system/postgresql-9.4.service&amp;quot;, # containing # .include /lib/systemd/system/postgresql-9.4.service # ...make your changes here... # For more info about custom unit files, see # http://fedoraproject.org/wiki/Systemd#How_do_I_customize_a_unit_file.2F_add_a_custom_unit_file.3F # Note: changing PGDATA will typically require adjusting SELinux # configuration as well.</description>
    </item>
    
    <item>
      <title>CentOS7にPostgreSQL Multi-MasterデータベースPostgresql-BDR 9.4インストール</title>
      <link>https://innoaus.jp/posts/20190304_1/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190304_1/</guid>
      <description>以下は2ndQuadrant社のPostgreSQL Multi-Masterプラグインbdr(Bidirectional Replication Plugin)のインストール方法です。
Postgres-BDRソースコードからビルドしインストール ソースコードからビルドするためにはgccコンパイラが必要です。
今回はgcc 7を使用します。
gcc 7インストール関連記事
準備 $ sudo yum -y install centos-release-scl $ sudo yum -y install devtoolset-7 $ sudo yum -y install readline-devel bison-devel bison flex-devel flex zlib-devel $ sudo yum -y install git  Postgres-BDR-9.4インストール 最新ソースを$HOME/2ndquadrant_bdrフォルダにダウンロードし、ビルドします。
$ curl -s &amp;quot;https://raw.githubusercontent.com/2ndQuadrant/bdr/bdr-plugin/REL1_0_STABLE/scripts/bdr_quickstart.sh&amp;quot; | bash  インストール確認 問題なくビルドできたら$HOME/2ndquadrant_bdrフォルダに
drwxrwxr-x. 6 user user 56 Mar 3 11:30 bdr drwxrwxr-x. 7 user user 4096 Mar 3 11:28 bdr-pg-src drwxrwxr-x.</description>
    </item>
    
    <item>
      <title>CentOS(6/7)にgcc-7および関連開発ツールインストール</title>
      <link>https://innoaus.jp/posts/20190303/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190303/</guid>
      <description>SoftwareCollections.orgプロジェクト SoftwareCollections.orgプロジェクトはRed Hat Enterprise Linux, Fedora, CentOS, Scientific LinuxのSoftware Collections(SCLs)を作るプロジェクトです。
https://www.softwarecollections.org
Software Collectionsは同じソフトウェアコンポーネントの複数のバージョンを同時にシステムにインストールできます。
Software Collectionインストール $ sudo yum -y install centos-release-scl Loaded plugins: fastestmirror Determining fastest mirrors * base: data.aonenetworks.kr * extras: data.aonenetworks.kr * updates: data.aonenetworks.kr base | 3.6 kB 00:00:00 extras | 3.4 kB 00:00:00 updates | 3.4 kB 00:00:00 (1/4): base/7/x86_64/group_gz | 166 kB 00:00:00 (2/4): extras/7/x86_64/primary_db | 180 kB 00:00:00 (3/4): updates/7/x86_64/primary_db | 2.4 MB 00:00:00 (4/4): base/7/x86_64/primary_db | 6.</description>
    </item>
    
    <item>
      <title>「CentOS 7」Cisco VPN接続のためのVPNクライアントvpncインストール</title>
      <link>https://innoaus.jp/posts/20190302/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.jp/posts/20190302/</guid>
      <description>EPELパッケージインストール vpncパッケージは基本リポジトリにないためEPEL(Extra Packages for Enterprise Linux)パッケージを追加します。
EPEL Site : https://fedoraproject.org/wiki/EPEL
# yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm Loaded plugins: fastestmirror epel-release-latest-7.noarch.rpm | 15 kB 00:00:00 Examining /var/tmp/yum-root-I01hVd/epel-release-latest-7.noarch.rpm: epel-release-7-11.noarch Marking /var/tmp/yum-root-I01hVd/epel-release-latest-7.noarch.rpm to be installed Resolving Dependencies --&amp;gt; Running transaction check ---&amp;gt; Package epel-release.noarch 0:7-11 will be installed --&amp;gt; Finished Dependency Resolution Dependencies Resolved ====================================================================================================================================================== Package Arch Version Repository Size ====================================================================================================================================================== Installing: epel-release noarch 7-11 /epel-release-latest-7.noarch 24 k Transaction Summary ====================================================================================================================================================== Install 1 Package Total size: 24 k Installed size: 24 k Is this ok [y/d/N]: y Downloading packages: Running transaction check Running transaction test Transaction test succeeded Running transaction Installing : epel-release-7-11.</description>
    </item>
    
  </channel>
</rss>